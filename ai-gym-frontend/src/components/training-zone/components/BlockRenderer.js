import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { ChevronUp, ChevronDown, Trash2 } from 'lucide-react';
export function BlockRenderer({ block, isSelected, canMoveUp, canMoveDown, onSelect, onMoveUp, onMoveDown, onDelete, isPreview = false }) {
    const renderBlockContent = () => {
        switch (block.type) {
            case 'section-header':
                return (_jsx("div", { className: "text-center", children: _jsx("h2", { className: `font-bold ${block.data.level === 'h1' ? 'text-3xl' :
                            block.data.level === 'h2' ? 'text-2xl' :
                                block.data.level === 'h3' ? 'text-xl' :
                                    block.data.level === 'h4' ? 'text-lg' :
                                        block.data.level === 'h5' ? 'text-base' : 'text-sm'}`, children: block.data.text || 'Section Title' }) }));
            case 'rich-text':
                return (_jsx("div", { className: "prose max-w-none", children: _jsx("p", { children: block.data.content || 'Enter your text here...' }) }));
            case 'list':
                return (_jsx("div", { children: _jsx("ul", { className: "list-disc list-inside space-y-1", children: (block.data.items || ['List item 1']).map((item, index) => (_jsx("li", { className: "text-gray-700", children: item }, index))) }) }));
            case 'division':
                return (_jsx("div", { className: "flex justify-center py-4", children: _jsx("div", { className: "w-24 h-px bg-gray-300" }) }));
            case 'quote':
                return (_jsxs("blockquote", { className: "border-l-4 border-blue-500 pl-4 italic text-gray-700", children: [_jsxs("p", { children: ["\"", block.data.text || 'Quote text', "\""] }), block.data.author && (_jsxs("cite", { className: "block mt-2 text-sm text-gray-500", children: ["\u2014 ", block.data.author] }))] }));
            case 'quiz':
                return (_jsxs("div", { className: "border border-gray-200 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold mb-2", children: block.data.title || 'Quiz Title' }), _jsxs("p", { className: "text-gray-600 text-sm", children: [block.data.questions?.length || 0, " questions"] })] }));
            case 'image-upload':
                return (_jsxs("div", { className: "border-2 border-dashed border-gray-300 rounded-lg p-8 text-center", children: [_jsx("div", { className: "text-gray-400 text-4xl mb-2", children: "\uD83D\uDCF7" }), _jsx("p", { className: "text-gray-600", children: "Image upload block" }), block.data.caption && (_jsx("p", { className: "text-sm text-gray-500 mt-2", children: block.data.caption }))] }));
            case 'video':
                const videoContent = block.data.selectedContent;
                if (isPreview && videoContent?.video?.video_url) {
                    // In preview mode, show embedded video if available
                    const videoUrl = videoContent.video.video_url;
                    const platform = videoContent.video.video_platform?.toLowerCase();
                    const videoId = videoContent.video.video_id;
                    // Enhanced video rendering with platform support
                    const renderVideo = () => {
                        // YouTube videos
                        if (platform === 'youtube' && videoId) {
                            return (_jsx("div", { className: "aspect-video", children: _jsx("iframe", { src: `https://www.youtube.com/embed/${videoId}?rel=0&modestbranding=1`, className: "w-full h-full rounded-lg border-0", allow: "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share", allowFullScreen: true, title: videoContent.title, loading: "lazy" }) }));
                        }
                        // Vimeo videos
                        if (platform === 'vimeo' && videoId) {
                            return (_jsx("div", { className: "aspect-video", children: _jsx("iframe", { src: `https://player.vimeo.com/video/${videoId}?h=0&badge=0&autopause=0&player_id=0&app_id=58479`, className: "w-full h-full rounded-lg border-0", allow: "autoplay; fullscreen; picture-in-picture", allowFullScreen: true, title: videoContent.title, loading: "lazy" }) }));
                        }
                        // Direct video URLs (MP4, WebM, etc.)
                        if (videoUrl && (videoUrl.includes('.mp4') || videoUrl.includes('.webm') || videoUrl.includes('.ogg'))) {
                            return (_jsx("div", { className: "aspect-video", children: _jsxs("video", { controls: true, className: "w-full h-full rounded-lg object-cover", src: videoUrl, poster: videoContent.video.thumbnail_url, children: [_jsx("source", { src: videoUrl, type: `video/${videoUrl.split('.').pop()}` }), "Your browser does not support the video tag."] }) }));
                        }
                        // Fallback for other video URLs
                        return (_jsx("div", { className: "aspect-video bg-gray-100 rounded-lg flex items-center justify-center", children: _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-4xl mb-2", children: "\uD83C\uDFA5" }), _jsx("p", { className: "text-gray-600", children: "Video format not supported for preview" }), _jsx("a", { href: videoUrl, target: "_blank", rel: "noopener noreferrer", className: "text-blue-600 hover:text-blue-800 underline text-sm mt-2 block", children: "Open video in new tab" })] }) }));
                    };
                    return (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "text-center", children: [_jsx("h3", { className: "text-lg font-semibold", children: videoContent.title }), videoContent.description && (_jsx("p", { className: "text-gray-600 mt-2", children: videoContent.description })), videoContent.video.duration_seconds && (_jsxs("p", { className: "text-sm text-gray-500 mt-1", children: ["Duration: ", Math.floor(videoContent.video.duration_seconds / 60), ":", (videoContent.video.duration_seconds % 60).toString().padStart(2, '0')] }))] }), renderVideo()] }));
                }
                // Editor mode or no video selected
                const getThumbnailUrl = () => {
                    if (videoContent?.video?.thumbnail_url) {
                        return videoContent.video.thumbnail_url;
                    }
                    // Generate YouTube thumbnail if available
                    if (videoContent?.video?.video_platform === 'youtube' && videoContent?.video?.video_id) {
                        return `https://img.youtube.com/vi/${videoContent.video.video_id}/mqdefault.jpg`;
                    }
                    // Generate Vimeo thumbnail (would need API call, so we'll skip for now)
                    return null;
                };
                const thumbnailUrl = getThumbnailUrl();
                return (_jsxs("div", { className: "bg-gray-100 rounded-lg p-8 text-center", children: [_jsx("div", { className: "text-4xl mb-2", children: "\uD83C\uDFA5" }), _jsx("p", { className: "font-medium", children: videoContent?.title || 'Video Block' }), _jsx("p", { className: "text-sm text-gray-600 mt-1", children: videoContent?.description || 'Select a video from repository' }), videoContent?.video?.video_platform && (_jsxs("p", { className: "text-xs text-gray-500 mt-1 capitalize", children: ["Platform: ", videoContent.video.video_platform] })), videoContent?.video?.duration_seconds && (_jsxs("p", { className: "text-xs text-gray-500", children: ["Duration: ", Math.floor(videoContent.video.duration_seconds / 60), ":", (videoContent.video.duration_seconds % 60).toString().padStart(2, '0')] })), thumbnailUrl && (_jsx("div", { className: "mt-4", children: _jsx("img", { src: thumbnailUrl, alt: videoContent.title, className: "w-40 h-24 object-cover rounded mx-auto shadow-sm", onError: (e) => {
                                    // Hide image if it fails to load
                                    e.currentTarget.style.display = 'none';
                                } }) }))] }));
            case 'ai-agent':
                const agentContent = block.data.selectedContent;
                if (isPreview && agentContent?.ai_agent?.system_prompt) {
                    // In preview mode, show agent interface
                    return (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "text-center border-b border-gray-200 pb-4", children: [_jsx("h3", { className: "text-lg font-semibold", children: agentContent.ai_agent.agent_name || agentContent.title }), agentContent.ai_agent.short_description && (_jsx("p", { className: "text-gray-600 mt-2", children: agentContent.ai_agent.short_description }))] }), _jsx("div", { className: "bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6", children: _jsxs("div", { className: "flex items-start space-x-4", children: [_jsx("div", { className: "w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold", children: "AI" }), _jsxs("div", { className: "flex-1", children: [_jsx("h4", { className: "font-medium text-gray-900 mb-2", children: "AI Agent Ready" }), _jsx("p", { className: "text-sm text-gray-600 mb-3", children: "This AI agent is configured and ready to assist. In a real training environment, you would be able to interact with it directly." }), _jsxs("div", { className: "bg-white rounded-lg p-3 border border-gray-200", children: [_jsx("p", { className: "text-xs text-gray-500 mb-2", children: "System Prompt Preview:" }), _jsxs("p", { className: "text-sm text-gray-700 line-clamp-3", children: [agentContent.ai_agent.system_prompt.substring(0, 200), agentContent.ai_agent.system_prompt.length > 200 ? '...' : ''] })] }), agentContent.ai_agent.test_conversations && agentContent.ai_agent.test_conversations.length > 0 && (_jsx("div", { className: "mt-3", children: _jsxs("p", { className: "text-xs text-gray-500 mb-2", children: [agentContent.ai_agent.test_conversations.length, " test conversation(s) available"] }) }))] })] }) })] }));
                }
                // Editor mode or no agent selected
                return (_jsxs("div", { className: "bg-blue-50 rounded-lg p-8 text-center", children: [_jsx("div", { className: "text-4xl mb-2", children: "\uD83E\uDD16" }), _jsx("p", { className: "font-medium", children: agentContent?.ai_agent?.agent_name || agentContent?.title || 'AI Agent Block' }), _jsx("p", { className: "text-sm text-gray-600 mt-1", children: agentContent?.ai_agent?.short_description || agentContent?.description || 'Select an AI agent from repository' }), agentContent?.ai_agent?.test_conversations && (_jsxs("p", { className: "text-xs text-gray-500 mt-1", children: [agentContent.ai_agent.test_conversations.length, " test conversation(s)"] }))] }));
            case 'document':
                const documentContent = block.data.selectedContent;
                // Check multiple possible data structure paths for document content
                const getDocumentContent = () => {
                    if (!documentContent)
                        return null;
                    // Try different possible paths for document content
                    return (documentContent.document?.content_html || // Original expected path
                        documentContent.content_html || // Direct content_html
                        documentContent.content || // Plain content field
                        documentContent.text || // Plain text field
                        documentContent.description || // Description as content
                        documentContent.document?.content || // Nested content
                        documentContent.document?.text || // Nested text
                        null);
                };
                const documentHtmlContent = getDocumentContent();
                if (isPreview && documentHtmlContent) {
                    // In preview mode, show actual document content
                    return (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "text-center border-b border-gray-200 pb-4", children: [_jsx("h3", { className: "text-lg font-semibold", children: documentContent?.title || 'Document' }), documentContent?.description && (_jsx("p", { className: "text-gray-600 mt-2", children: documentContent.description })), documentContent?.document?.word_count && (_jsxs("p", { className: "text-sm text-gray-500 mt-1", children: [documentContent.document.word_count, " words \u2022 ", documentContent.document.reading_time_minutes, " min read"] }))] }), _jsx("div", { className: "prose max-w-none", children: documentHtmlContent.includes('<') ? (_jsx("div", { dangerouslySetInnerHTML: { __html: documentHtmlContent } })) : (_jsx("div", { className: "whitespace-pre-wrap", children: documentHtmlContent })) })] }));
                }
                // Editor mode or no document selected
                return (_jsxs("div", { className: "bg-green-50 rounded-lg p-8 text-center", children: [_jsx("div", { className: "text-4xl mb-2", children: "\uD83D\uDCDA" }), _jsx("p", { className: "font-medium", children: documentContent?.title || 'Document Block' }), _jsx("p", { className: "text-sm text-gray-600 mt-1", children: documentContent?.description || 'Select a document from repository' }), documentContent?.document?.word_count && (_jsxs("p", { className: "text-xs text-gray-500 mt-1", children: [documentContent.document.word_count, " words \u2022 ", documentContent.document.reading_time_minutes, " min read"] }))] }));
                // Editor mode or no document selected
                return (_jsxs("div", { className: "bg-green-50 rounded-lg p-8 text-center", children: [_jsx("div", { className: "text-4xl mb-2", children: "\uD83D\uDCDA" }), _jsx("p", { className: "font-medium", children: documentContent?.title || 'Document Block' }), _jsx("p", { className: "text-sm text-gray-600 mt-1", children: documentContent?.description || 'Select a document from repository' }), documentContent?.document?.word_count && (_jsxs("p", { className: "text-xs text-gray-500 mt-1", children: [documentContent.document.word_count, " words \u2022 ", documentContent.document.reading_time_minutes, " min read"] }))] }));
            case 'image':
                const imageContent = block.data.selectedContent;
                if (isPreview && imageContent?.image?.image_url) {
                    // In preview mode, show actual image
                    return (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "text-center", children: [_jsx("h3", { className: "text-lg font-semibold", children: imageContent.title }), imageContent.description && (_jsx("p", { className: "text-gray-600 mt-2", children: imageContent.description }))] }), _jsxs("div", { className: "flex justify-center", children: [_jsx("img", { src: imageContent.image.image_url, alt: imageContent.image.alt_text || imageContent.title, className: "max-w-full h-auto rounded-lg shadow-md", style: {
                                            maxHeight: imageContent.image.height && imageContent.image.height > 600 ? '600px' : 'auto'
                                        }, onError: (e) => {
                                            // Fallback to placeholder if image fails to load
                                            e.currentTarget.style.display = 'none';
                                            const fallback = e.currentTarget.nextElementSibling;
                                            if (fallback)
                                                fallback.style.display = 'block';
                                        } }), _jsxs("div", { className: "bg-gray-100 rounded-lg p-8 text-center", style: { display: 'none' }, children: [_jsx("div", { className: "text-4xl mb-2", children: "\uD83D\uDDBC\uFE0F" }), _jsx("p", { className: "text-gray-600", children: "Failed to load image" })] })] }), imageContent.image.alt_text && (_jsx("p", { className: "text-sm text-gray-500 text-center italic", children: imageContent.image.alt_text })), (imageContent.image.width || imageContent.image.height || imageContent.image.file_size) && (_jsxs("div", { className: "text-xs text-gray-400 text-center space-x-4", children: [imageContent.image.width && imageContent.image.height && (_jsxs("span", { children: [imageContent.image.width, " \u00D7 ", imageContent.image.height, "px"] })), imageContent.image.file_size && (_jsxs("span", { children: [Math.round(imageContent.image.file_size / 1024), " KB"] }))] }))] }));
                }
                // Editor mode or no image selected
                return (_jsxs("div", { className: "bg-purple-50 rounded-lg p-8 text-center", children: [_jsx("div", { className: "text-4xl mb-2", children: "\uD83D\uDDBC\uFE0F" }), _jsx("p", { className: "font-medium", children: imageContent?.title || 'Image Block' }), _jsx("p", { className: "text-sm text-gray-600 mt-1", children: imageContent?.description || 'Select an image from repository' }), imageContent?.image && (_jsxs("div", { className: "text-xs text-gray-500 mt-1 space-x-4", children: [imageContent.image.width && imageContent.image.height && (_jsxs("span", { children: [imageContent.image.width, " \u00D7 ", imageContent.image.height, "px"] })), imageContent.image.file_size && (_jsxs("span", { children: [Math.round(imageContent.image.file_size / 1024), " KB"] }))] }))] }));
            case 'pdf':
                const pdfContent = block.data.selectedContent;
                if (isPreview && pdfContent?.pdf?.pdf_url) {
                    // In preview mode, show embedded PDF viewer
                    return (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "text-center border-b border-gray-200 pb-4", children: [_jsx("h3", { className: "text-lg font-semibold", children: pdfContent.title }), pdfContent.description && (_jsx("p", { className: "text-gray-600 mt-2", children: pdfContent.description })), _jsxs("div", { className: "flex justify-center items-center space-x-4 text-sm text-gray-500 mt-2", children: [pdfContent.pdf.page_count && (_jsxs("span", { children: [pdfContent.pdf.page_count, " pages"] })), pdfContent.pdf.file_size && (_jsxs("span", { children: [Math.round(pdfContent.pdf.file_size / (1024 * 1024)), " MB"] })), _jsx("a", { href: pdfContent.pdf.pdf_url, target: "_blank", rel: "noopener noreferrer", className: "text-blue-600 hover:text-blue-800 underline", children: "Open in new tab" })] })] }), _jsx("div", { className: "w-full", children: _jsx("iframe", { src: `${pdfContent.pdf.pdf_url}#toolbar=1&navpanes=1&scrollbar=1`, className: "w-full h-96 border border-gray-300 rounded-lg", title: pdfContent.title, onError: () => {
                                        // If iframe fails, show fallback
                                        console.log('PDF iframe failed to load');
                                    } }) })] }));
                }
                // Editor mode or no PDF selected
                return (_jsxs("div", { className: "bg-red-50 rounded-lg p-8 text-center", children: [_jsx("div", { className: "text-4xl mb-2", children: "\uD83D\uDCC4" }), _jsx("p", { className: "font-medium", children: pdfContent?.title || 'PDF Block' }), _jsx("p", { className: "text-sm text-gray-600 mt-1", children: pdfContent?.description || 'Select a PDF from repository' }), pdfContent?.pdf && (_jsxs("div", { className: "text-xs text-gray-500 mt-1 space-x-4", children: [pdfContent.pdf.page_count && (_jsxs("span", { children: [pdfContent.pdf.page_count, " pages"] })), pdfContent.pdf.file_size && (_jsxs("span", { children: [Math.round(pdfContent.pdf.file_size / (1024 * 1024)), " MB"] }))] }))] }));
            case 'prompts':
                const promptContent = block.data.selectedContent;
                if (isPreview && promptContent?.prompt?.prompt_text) {
                    // In preview mode, show actual prompt content
                    return (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "text-center border-b border-gray-200 pb-4", children: [_jsx("h3", { className: "text-lg font-semibold", children: promptContent.title }), promptContent.description && (_jsx("p", { className: "text-gray-600 mt-2", children: promptContent.description })), _jsxs("div", { className: "flex justify-center items-center space-x-4 text-sm text-gray-500 mt-2", children: [promptContent.prompt.prompt_category && (_jsx("span", { className: "px-2 py-1 bg-yellow-100 text-yellow-800 rounded-full text-xs", children: promptContent.prompt.prompt_category })), promptContent.prompt.usage_count > 0 && (_jsxs("span", { children: ["Used ", promptContent.prompt.usage_count, " times"] }))] })] }), _jsx("div", { className: "bg-gradient-to-r from-yellow-50 to-amber-50 rounded-lg p-6", children: _jsxs("div", { className: "flex items-start space-x-4", children: [_jsx("div", { className: "w-10 h-10 bg-yellow-500 rounded-full flex items-center justify-center text-white text-xl", children: "\uD83D\uDCAD" }), _jsxs("div", { className: "flex-1", children: [_jsx("h4", { className: "font-medium text-gray-900 mb-3", children: "Prompt Template" }), _jsx("div", { className: "bg-white rounded-lg p-4 border border-gray-200 shadow-sm", children: _jsx("pre", { className: "whitespace-pre-wrap text-sm text-gray-700 font-mono leading-relaxed", children: promptContent.prompt.prompt_text }) }), _jsxs("div", { className: "mt-3 flex justify-between items-center", children: [_jsxs("p", { className: "text-xs text-gray-500", children: [promptContent.prompt.prompt_text.length, " characters"] }), _jsx("button", { className: "px-3 py-1 bg-yellow-500 text-white text-xs rounded hover:bg-yellow-600 transition-colors", children: "Copy Prompt" })] })] })] }) })] }));
                }
                // Editor mode or no prompt selected
                return (_jsxs("div", { className: "bg-yellow-50 rounded-lg p-8 text-center", children: [_jsx("div", { className: "text-4xl mb-2", children: "\uD83D\uDCAD" }), _jsx("p", { className: "font-medium", children: promptContent?.title || 'Prompts Block' }), _jsx("p", { className: "text-sm text-gray-600 mt-1", children: promptContent?.description || 'Select prompts from repository' }), promptContent?.prompt && (_jsxs("div", { className: "text-xs text-gray-500 mt-1 space-x-4", children: [promptContent.prompt.prompt_category && (_jsx("span", { className: "px-2 py-1 bg-yellow-100 text-yellow-800 rounded-full", children: promptContent.prompt.prompt_category })), promptContent.prompt.usage_count > 0 && (_jsxs("span", { children: ["Used ", promptContent.prompt.usage_count, " times"] }))] }))] }));
            case 'automation':
                const automationContent = block.data.selectedContent;
                if (isPreview && automationContent?.automation?.automation_url) {
                    // In preview mode, show automation details and interface
                    return (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "text-center border-b border-gray-200 pb-4", children: [_jsx("h3", { className: "text-lg font-semibold", children: automationContent.title }), automationContent.description && (_jsx("p", { className: "text-gray-600 mt-2", children: automationContent.description }))] }), _jsx("div", { className: "bg-gradient-to-r from-orange-50 to-red-50 rounded-lg p-6", children: _jsxs("div", { className: "flex items-start space-x-4", children: [_jsx("div", { className: "w-10 h-10 bg-orange-500 rounded-full flex items-center justify-center text-white text-xl", children: "\u26A1" }), _jsxs("div", { className: "flex-1", children: [_jsx("h4", { className: "font-medium text-gray-900 mb-3", children: "Automation Workflow" }), automationContent.automation.tool_description && (_jsxs("div", { className: "bg-white rounded-lg p-4 border border-gray-200 mb-4", children: [_jsx("h5", { className: "font-medium text-sm text-gray-900 mb-2", children: "Description" }), _jsx("p", { className: "text-sm text-gray-600", children: automationContent.automation.tool_description })] })), automationContent.automation.required_tools && automationContent.automation.required_tools.length > 0 && (_jsxs("div", { className: "bg-white rounded-lg p-4 border border-gray-200 mb-4", children: [_jsx("h5", { className: "font-medium text-sm text-gray-900 mb-2", children: "Required Tools" }), _jsx("div", { className: "flex flex-wrap gap-2", children: automationContent.automation.required_tools.map((tool, index) => (_jsx("span", { className: "px-2 py-1 bg-orange-100 text-orange-800 rounded text-xs", children: tool }, index))) })] })), automationContent.automation.setup_instructions && (_jsxs("div", { className: "bg-white rounded-lg p-4 border border-gray-200 mb-4", children: [_jsx("h5", { className: "font-medium text-sm text-gray-900 mb-2", children: "Setup Instructions" }), _jsx("div", { className: "text-sm text-gray-600 whitespace-pre-wrap", children: automationContent.automation.setup_instructions })] })), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("p", { className: "text-xs text-gray-500", children: "Automation ready to deploy" }), _jsx("a", { href: automationContent.automation.automation_url, target: "_blank", rel: "noopener noreferrer", className: "px-4 py-2 bg-orange-500 text-white text-sm rounded hover:bg-orange-600 transition-colors", children: "Open Automation" })] })] })] }) })] }));
                }
                // Editor mode or no automation selected
                return (_jsxs("div", { className: "bg-orange-50 rounded-lg p-8 text-center", children: [_jsx("div", { className: "text-4xl mb-2", children: "\u26A1" }), _jsx("p", { className: "font-medium", children: automationContent?.title || 'Automation Block' }), _jsx("p", { className: "text-sm text-gray-600 mt-1", children: automationContent?.description || 'Select automation from repository' }), automationContent?.automation?.required_tools && automationContent.automation.required_tools.length > 0 && (_jsxs("div", { className: "text-xs text-gray-500 mt-2", children: [_jsx("p", { children: "Required tools:" }), _jsx("div", { className: "flex justify-center flex-wrap gap-1 mt-1", children: automationContent.automation.required_tools.map((tool, index) => (_jsx("span", { className: "px-2 py-1 bg-orange-100 text-orange-800 rounded", children: tool }, index))) })] }))] }));
            case 'wods':
                const wodContent = block.data.selectedContent;
                if (isPreview && wodContent?.wod) {
                    // In preview mode, show actual WOD content
                    return (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "text-center border-b border-gray-200 pb-4", children: [_jsx("h3", { className: "text-lg font-semibold", children: wodContent.title }), wodContent.description && (_jsx("p", { className: "text-gray-600 mt-2", children: wodContent.description })), _jsxs("div", { className: "flex justify-center items-center space-x-4 text-sm text-gray-500 mt-2", children: [wodContent.wod.duration_minutes && (_jsxs("span", { children: [wodContent.wod.duration_minutes, " min"] })), wodContent.wod.difficulty_level && (_jsxs("span", { className: "px-2 py-1 bg-orange-100 text-orange-800 rounded-full text-xs", children: [wodContent.wod.difficulty_level, " difficulty"] }))] })] }), _jsx("div", { className: "bg-gradient-to-r from-orange-50 to-red-50 rounded-lg p-6", children: _jsxs("div", { className: "flex items-start space-x-4", children: [_jsx("div", { className: "w-10 h-10 bg-orange-500 rounded-full flex items-center justify-center text-white text-xl", children: "\uD83D\uDCAA" }), _jsxs("div", { className: "flex-1", children: [_jsx("h4", { className: "font-medium text-gray-900 mb-3", children: "Workout of the Day" }), wodContent.wod.instructions && (_jsxs("div", { className: "bg-white rounded-lg p-4 border border-gray-200 mb-4", children: [_jsx("h5", { className: "font-medium text-sm text-gray-900 mb-2", children: "Instructions" }), _jsx("div", { className: "text-sm text-gray-600 whitespace-pre-wrap", children: wodContent.wod.instructions })] })), wodContent.wod.target_muscle_groups && wodContent.wod.target_muscle_groups.length > 0 && (_jsxs("div", { className: "bg-white rounded-lg p-4 border border-gray-200 mb-4", children: [_jsx("h5", { className: "font-medium text-sm text-gray-900 mb-2", children: "Target Muscle Groups" }), _jsx("div", { className: "flex flex-wrap gap-2", children: wodContent.wod.target_muscle_groups.map((group, index) => (_jsx("span", { className: "px-2 py-1 bg-orange-100 text-orange-800 rounded text-xs", children: group }, index))) })] })), wodContent.wod.equipment_needed && wodContent.wod.equipment_needed.length > 0 && (_jsxs("div", { className: "bg-white rounded-lg p-4 border border-gray-200 mb-4", children: [_jsx("h5", { className: "font-medium text-sm text-gray-900 mb-2", children: "Equipment Needed" }), _jsx("div", { className: "flex flex-wrap gap-2", children: wodContent.wod.equipment_needed.map((equipment, index) => (_jsx("span", { className: "px-2 py-1 bg-gray-100 text-gray-800 rounded text-xs", children: equipment }, index))) })] })), wodContent.wod.notes && (_jsxs("div", { className: "bg-white rounded-lg p-4 border border-gray-200", children: [_jsx("h5", { className: "font-medium text-sm text-gray-900 mb-2", children: "Notes" }), _jsx("p", { className: "text-sm text-gray-600", children: wodContent.wod.notes })] }))] })] }) })] }));
                }
                // Editor mode or no WOD selected
                return (_jsxs("div", { className: "bg-orange-50 rounded-lg p-8 text-center", children: [_jsx("div", { className: "text-4xl mb-2", children: "\uD83D\uDCAA" }), _jsx("p", { className: "font-medium", children: wodContent?.title || 'WOD Block' }), _jsx("p", { className: "text-sm text-gray-600 mt-1", children: wodContent?.description || 'Select a WOD from repository' }), wodContent?.wod && (_jsxs("div", { className: "text-xs text-gray-500 mt-2 space-x-4", children: [wodContent.wod.duration_minutes && (_jsxs("span", { children: [wodContent.wod.duration_minutes, " min"] })), wodContent.wod.difficulty_level && (_jsxs("span", { className: "px-2 py-1 bg-orange-100 text-orange-800 rounded", children: [wodContent.wod.difficulty_level, " difficulty"] }))] }))] }));
            case 'blocks':
                const blockContent = block.data.selectedContent;
                if (isPreview && blockContent?.block) {
                    // In preview mode, show actual BLOCK content
                    return (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "text-center border-b border-gray-200 pb-4", children: [_jsx("h3", { className: "text-lg font-semibold", children: blockContent.title }), blockContent.description && (_jsx("p", { className: "text-gray-600 mt-2", children: blockContent.description })), _jsxs("div", { className: "flex justify-center items-center space-x-4 text-sm text-gray-500 mt-2", children: [blockContent.block.duration_minutes && (_jsxs("span", { children: [blockContent.block.duration_minutes, " min"] })), blockContent.block.intensity_level && (_jsxs("span", { className: "px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs", children: [blockContent.block.intensity_level, " intensity"] })), blockContent.block.block_type && (_jsx("span", { className: "px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs", children: blockContent.block.block_type }))] })] }), _jsx("div", { className: "bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6", children: _jsxs("div", { className: "flex items-start space-x-4", children: [_jsx("div", { className: "w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center text-white text-xl", children: "\uD83C\uDFD7\uFE0F" }), _jsxs("div", { className: "flex-1", children: [_jsx("h4", { className: "font-medium text-gray-900 mb-3", children: "Training Block" }), blockContent.block.instructions && (_jsxs("div", { className: "bg-white rounded-lg p-4 border border-gray-200 mb-4", children: [_jsx("h5", { className: "font-medium text-sm text-gray-900 mb-2", children: "Instructions" }), _jsx("div", { className: "text-sm text-gray-600 whitespace-pre-wrap", children: blockContent.block.instructions })] })), blockContent.block.target_area && (_jsxs("div", { className: "bg-white rounded-lg p-4 border border-gray-200 mb-4", children: [_jsx("h5", { className: "font-medium text-sm text-gray-900 mb-2", children: "Target Area" }), _jsx("span", { className: "px-3 py-1 bg-blue-100 text-blue-800 rounded text-sm", children: blockContent.block.target_area })] })), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [blockContent.block.repetitions > 0 && (_jsxs("div", { className: "bg-white rounded-lg p-4 border border-gray-200", children: [_jsx("h5", { className: "font-medium text-sm text-gray-900 mb-1", children: "Repetitions" }), _jsx("p", { className: "text-lg font-bold text-blue-600", children: blockContent.block.repetitions })] })), blockContent.block.rest_periods > 0 && (_jsxs("div", { className: "bg-white rounded-lg p-4 border border-gray-200", children: [_jsx("h5", { className: "font-medium text-sm text-gray-900 mb-1", children: "Rest Period" }), _jsxs("p", { className: "text-lg font-bold text-blue-600", children: [blockContent.block.rest_periods, "s"] })] })), blockContent.block.intensity_level && (_jsxs("div", { className: "bg-white rounded-lg p-4 border border-gray-200", children: [_jsx("h5", { className: "font-medium text-sm text-gray-900 mb-1", children: "Intensity" }), _jsx("p", { className: "text-lg font-bold text-blue-600", children: blockContent.block.intensity_level })] }))] })] })] }) })] }));
                }
                // Editor mode or no BLOCK selected
                return (_jsxs("div", { className: "bg-blue-50 rounded-lg p-8 text-center", children: [_jsx("div", { className: "text-4xl mb-2", children: "\uD83C\uDFD7\uFE0F" }), _jsx("p", { className: "font-medium", children: blockContent?.title || 'Training Block' }), _jsx("p", { className: "text-sm text-gray-600 mt-1", children: blockContent?.description || 'Select a training block from repository' }), blockContent?.block && (_jsxs("div", { className: "text-xs text-gray-500 mt-2 space-x-4", children: [blockContent.block.duration_minutes && (_jsxs("span", { children: [blockContent.block.duration_minutes, " min"] })), blockContent.block.intensity_level && (_jsxs("span", { className: "px-2 py-1 bg-blue-100 text-blue-800 rounded", children: [blockContent.block.intensity_level, " intensity"] }))] }))] }));
            default:
                return (_jsxs("div", { className: "text-center text-gray-400", children: [_jsx("div", { className: "text-4xl mb-2", children: "\uD83D\uDD27" }), _jsxs("p", { children: ["Unknown block type: ", block.type] })] }));
        }
    };
    if (isPreview) {
        // Preview mode - clean rendering without controls
        return (_jsx("div", { className: "bg-white rounded-lg", children: renderBlockContent() }));
    }
    return (_jsxs("div", { className: `
        group relative border-2 rounded-lg transition-all duration-200 cursor-pointer
        ${isSelected
            ? 'border-blue-500 bg-blue-50'
            : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'}
      `, onClick: onSelect, children: [_jsx("div", { className: "absolute -top-3 left-4 px-2 py-1 bg-white border border-gray-200 rounded text-xs font-medium text-gray-600 capitalize", children: block.type.replace('-', ' ') }), _jsxs("div", { className: "absolute -top-2 -right-2 flex items-center space-x-1 opacity-0 group-hover:opacity-100 transition-opacity", children: [_jsx("button", { onClick: (e) => {
                            e.stopPropagation();
                            onMoveUp();
                        }, disabled: !canMoveUp, className: "w-6 h-6 bg-white border border-gray-300 rounded-full flex items-center justify-center hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed", title: "Move up", children: _jsx(ChevronUp, { className: "w-3 h-3" }) }), _jsx("button", { onClick: (e) => {
                            e.stopPropagation();
                            onMoveDown();
                        }, disabled: !canMoveDown, className: "w-6 h-6 bg-white border border-gray-300 rounded-full flex items-center justify-center hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed", title: "Move down", children: _jsx(ChevronDown, { className: "w-3 h-3" }) }), onDelete && (_jsx("button", { onClick: (e) => {
                            e.stopPropagation();
                            if (confirm(`Are you sure you want to delete this ${block.type.replace('-', ' ')} block?`)) {
                                onDelete();
                            }
                        }, className: "w-6 h-6 bg-white border border-red-300 rounded-full flex items-center justify-center hover:bg-red-50 hover:border-red-400 text-red-600 hover:text-red-700 transition-colors", title: "Delete block", children: _jsx(Trash2, { className: "w-3 h-3" }) }))] }), _jsx("div", { className: "p-6 min-h-[120px]", children: renderBlockContent() })] }));
}
