import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export function WODSettingsPanel({ wodData, onUpdate }) {
    const handleInputChange = (field, value) => {
        if (field.startsWith('settings.')) {
            const settingsField = field.replace('settings.', '');
            onUpdate({
                ...wodData,
                settings: {
                    ...wodData.settings,
                    [settingsField]: value
                }
            });
        }
        else {
            onUpdate({
                ...wodData,
                [field]: value
            });
        }
    };
    return (_jsxs("div", { className: "p-6 space-y-6", children: [_jsxs("div", { children: [_jsx("h2", { className: "text-lg font-semibold text-gray-900 mb-4", children: "Content Settings" }), _jsx("p", { className: "text-sm text-gray-600 mb-6", children: "Configure your content metadata and targeting" })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "font-medium text-gray-900", children: "Basic Information" }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Title" }), _jsx("input", { type: "text", value: wodData.title, onChange: (e) => handleInputChange('title', e.target.value), className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500", placeholder: "Enter content title..." })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Description" }), _jsx("textarea", { rows: 3, value: wodData.description, onChange: (e) => handleInputChange('description', e.target.value), className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500", placeholder: "Enter content description..." })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Status" }), _jsxs("select", { value: wodData.status, onChange: (e) => handleInputChange('status', e.target.value), className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500", children: [_jsx("option", { value: "draft", children: "Draft" }), _jsx("option", { value: "published", children: "Published" })] })] })] }), _jsxs("div", { className: "space-y-4 border-t border-gray-200 pt-4", children: [_jsx("h3", { className: "font-medium text-gray-900", children: "Community Targeting" }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "Selected Communities" }), _jsxs("div", { className: "space-y-2", children: [_jsx("button", { className: "w-full p-2 text-left border border-gray-300 rounded-lg hover:bg-gray-50", children: _jsx("span", { className: "text-sm text-gray-600", children: "+ Select Communities" }) }), wodData.settings.communities.map((communityId, index) => (_jsxs("div", { className: "flex items-center justify-between p-2 bg-blue-50 rounded-lg", children: [_jsxs("span", { className: "text-sm text-blue-900", children: ["Community ", index + 1] }), _jsx("button", { onClick: () => {
                                                    const newCommunities = wodData.settings.communities.filter((_, i) => i !== index);
                                                    handleInputChange('settings.communities', newCommunities);
                                                }, className: "text-blue-600 hover:text-blue-800", children: "\u00D7" })] }, index)))] })] })] }), _jsxs("div", { className: "space-y-4 border-t border-gray-200 pt-4", children: [_jsx("h3", { className: "font-medium text-gray-900", children: "Content Configuration" }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Difficulty Level" }), _jsxs("select", { value: wodData.settings.difficulty, onChange: (e) => handleInputChange('settings.difficulty', parseInt(e.target.value)), className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500", children: [_jsx("option", { value: 1, children: "1 - Beginner" }), _jsx("option", { value: 2, children: "2 - Easy" }), _jsx("option", { value: 3, children: "3 - Intermediate" }), _jsx("option", { value: 4, children: "4 - Advanced" }), _jsx("option", { value: 5, children: "5 - Expert" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Estimated Duration (minutes)" }), _jsx("input", { type: "number", min: "1", max: "300", value: wodData.settings.estimatedDuration, onChange: (e) => handleInputChange('settings.estimatedDuration', parseInt(e.target.value) || 0), className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", id: "autoSave", checked: wodData.settings.autoSaveEnabled, onChange: (e) => handleInputChange('settings.autoSaveEnabled', e.target.checked), className: "rounded border-gray-300 text-blue-600 focus:ring-blue-500" }), _jsx("label", { htmlFor: "autoSave", className: "text-sm font-medium text-gray-700", children: "Enable Auto-save" })] })] })] }));
}
