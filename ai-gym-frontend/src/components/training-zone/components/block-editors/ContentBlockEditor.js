import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import { ExternalLink } from 'lucide-react';
export function ContentBlockEditor({ block, onUpdate, onOpenRepository }) {
    const handleChange = (field, value) => {
        onUpdate({
            ...block,
            data: {
                ...block.data,
                [field]: value
            }
        });
    };
    const getBlockTypeLabel = (type) => {
        switch (type) {
            case 'ai-agent': return 'AI Agent';
            default: return type.charAt(0).toUpperCase() + type.slice(1);
        }
    };
    const getBlockIcon = (type) => {
        switch (type) {
            case 'video': return '🎥';
            case 'ai-agent': return '🤖';
            case 'document': return '📚';
            case 'prompt': return '💭';
            case 'prompts': return '💭';
            case 'automation': return '⚡';
            case 'image': return '🖼️';
            case 'pdf': return '📄';
            default: return '📁';
        }
    };
    return (_jsxs("div", { className: "p-6 space-y-4", children: [_jsxs("h3", { className: "font-medium text-gray-900 mb-4", children: [getBlockTypeLabel(block.type), " Settings"] }), block.data.selectedContent ? (_jsx("div", { className: "bg-gray-50 rounded-lg p-4 mb-4", children: _jsxs("div", { className: "flex items-start space-x-3", children: [_jsx("div", { className: "text-2xl", children: getBlockIcon(block.type) }), _jsxs("div", { className: "flex-1", children: [_jsx("h4", { className: "font-medium text-gray-900", children: block.data.selectedContent.title || block.data.selectedContent.name }), _jsx("p", { className: "text-sm text-gray-600 mt-1", children: block.data.selectedContent.description }), _jsxs("button", { className: "flex items-center space-x-1 text-sm text-blue-600 hover:text-blue-800 mt-2 cursor-pointer transition-colors", onClick: () => onOpenRepository?.(block.type), children: [_jsx(ExternalLink, { className: "h-3 w-3" }), _jsxs("span", { className: "hover:underline", children: ["Change ", getBlockTypeLabel(block.type)] })] })] })] }) })) : (_jsxs("div", { className: "border-2 border-dashed border-gray-300 rounded-lg p-6 text-center text-gray-500", children: [_jsx("div", { className: "text-3xl mb-2", children: getBlockIcon(block.type) }), _jsxs("p", { children: ["No ", getBlockTypeLabel(block.type).toLowerCase(), " selected"] }), _jsxs("button", { className: "mt-2 text-blue-600 hover:text-blue-800 text-sm cursor-pointer transition-colors hover:underline", onClick: () => onOpenRepository?.(block.type), children: ["Select ", getBlockTypeLabel(block.type)] })] })), _jsxs("div", { className: "space-y-4", children: [_jsx("h4", { className: "text-sm font-medium text-gray-700", children: "Display Options" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("label", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", checked: block.data.showTitle !== false, onChange: (e) => handleChange('showTitle', e.target.checked), className: "rounded border-gray-300 text-blue-600 focus:ring-blue-500" }), _jsx("span", { className: "text-sm text-gray-700", children: "Show Title" })] }), _jsxs("label", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", checked: block.data.showDescription !== false, onChange: (e) => handleChange('showDescription', e.target.checked), className: "rounded border-gray-300 text-blue-600 focus:ring-blue-500" }), _jsx("span", { className: "text-sm text-gray-700", children: "Show Description" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "Custom Title (optional)" }), _jsx("input", { type: "text", value: block.data.customTitle || '', onChange: (e) => handleChange('customTitle', e.target.value), className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500", placeholder: "Override default title..." })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "Custom Description (optional)" }), _jsx("textarea", { rows: 3, value: block.data.customDescription || '', onChange: (e) => handleChange('customDescription', e.target.value), className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500", placeholder: "Override default description..." })] })] }), block.type === 'video' && (_jsxs("div", { className: "border-t border-gray-200 pt-4", children: [_jsx("h4", { className: "text-sm font-medium text-gray-700 mb-3", children: "Video Playback" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("label", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", checked: block.data.autoplay || false, onChange: (e) => handleChange('autoplay', e.target.checked), className: "rounded border-gray-300 text-blue-600 focus:ring-blue-500" }), _jsx("span", { className: "text-sm text-gray-700", children: "Autoplay" })] }), _jsxs("label", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", checked: block.data.loop || false, onChange: (e) => handleChange('loop', e.target.checked), className: "rounded border-gray-300 text-blue-600 focus:ring-blue-500" }), _jsx("span", { className: "text-sm text-gray-700", children: "Loop" })] }), _jsxs("label", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", checked: block.data.showControls !== false, onChange: (e) => handleChange('showControls', e.target.checked), className: "rounded border-gray-300 text-blue-600 focus:ring-blue-500" }), _jsx("span", { className: "text-sm text-gray-700", children: "Show Controls" })] })] })] })), block.type === 'ai-agent' && (_jsxs("div", { className: "border-t border-gray-200 pt-4", children: [_jsx("h4", { className: "text-sm font-medium text-gray-700 mb-3", children: "Chat Options" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("label", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", checked: block.data.chatEnabled !== false, onChange: (e) => handleChange('chatEnabled', e.target.checked), className: "rounded border-gray-300 text-blue-600 focus:ring-blue-500" }), _jsx("span", { className: "text-sm text-gray-700", children: "Enable Chat" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "Initial Message" }), _jsx("input", { type: "text", value: block.data.initialMessage || '', onChange: (e) => handleChange('initialMessage', e.target.value), className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500", placeholder: "Hello! How can I help you today?" })] })] })] }))] }));
}
