
> react_repo@0.0.0 build /workspace/ai-gym-frontend
> yes | pnpm install && rm -rf node_modules/.vite-temp && tsc -b && vite build

Lockfile is up to date, resolution step is skipped
Progress: resolved 1, reused 0, downloaded 0, added 0
Packages: +479
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Progress: resolved 479, reused 0, downloaded 0, added 0
Progress: resolved 479, reused 65, downloaded 0, added 0
Progress: resolved 479, reused 312, downloaded 0, added 0
Progress: resolved 479, reused 479, downloaded 0, added 219
Progress: resolved 479, reused 479, downloaded 0, added 479, done

dependencies:
+ @hookform/resolvers 3.10.0
+ @monaco-editor/react 4.7.0
+ @radix-ui/react-accordion 1.2.4
+ @radix-ui/react-alert-dialog 1.1.7
+ @radix-ui/react-aspect-ratio 1.1.3
+ @radix-ui/react-avatar 1.1.4
+ @radix-ui/react-checkbox 1.1.5
+ @radix-ui/react-collapsible 1.1.4
+ @radix-ui/react-context-menu 2.2.7
+ @radix-ui/react-dialog 1.1.7
+ @radix-ui/react-dropdown-menu 2.1.7
+ @radix-ui/react-hover-card 1.1.7
+ @radix-ui/react-label 2.1.3
+ @radix-ui/react-menubar 1.1.7
+ @radix-ui/react-navigation-menu 1.2.6
+ @radix-ui/react-popover 1.1.7
+ @radix-ui/react-progress 1.1.3
+ @radix-ui/react-radio-group 1.2.4
+ @radix-ui/react-scroll-area 1.2.4
+ @radix-ui/react-select 2.1.7
+ @radix-ui/react-separator 1.1.3
+ @radix-ui/react-slider 1.2.4
+ @radix-ui/react-slot 1.2.0
+ @radix-ui/react-switch 1.1.4
+ @radix-ui/react-tabs 1.1.4
+ @radix-ui/react-toast 1.2.7
+ @radix-ui/react-toggle 1.1.3
+ @radix-ui/react-toggle-group 1.1.3
+ @radix-ui/react-tooltip 1.2.0
+ @supabase/supabase-js 2.56.0
+ class-variance-authority 0.7.1
+ clsx 2.1.1
+ cmdk 1.0.0
+ date-fns 3.6.0
+ embla-carousel-react 8.6.0
+ input-otp 1.4.2
+ lucide-react 0.364.0
+ next-themes 0.4.6
+ quill 2.0.3
+ react 18.3.1
+ react-day-picker 8.10.1
+ react-dom 18.3.1
+ react-hook-form 7.55.0
+ react-quill 2.0.0
+ react-resizable-panels 2.1.7
+ react-router-dom 6.30.0
+ recharts 2.15.2
+ sonner 1.7.4
+ tailwind-merge 2.6.0
+ tailwindcss-animate 1.0.7
+ vaul 1.1.2
+ zod 3.24.2

devDependencies:
+ @eslint/js 9.24.0
+ @types/node 22.14.1
+ @types/react 18.3.20
+ @types/react-dom 18.3.6
+ @types/react-router-dom 5.3.3
+ @vitejs/plugin-react 4.3.4
+ autoprefixer 10.4.20
+ eslint 9.24.0
+ eslint-plugin-react-hooks 5.2.0
+ eslint-plugin-react-refresh 0.4.19
+ globals 15.15.0
+ postcss 8.4.49
+ tailwindcss 3.4.16
+ typescript 5.6.3
+ typescript-eslint 8.29.1
+ vite 6.2.6
+ vite-plugin-source-identifier 1.1.2

╭ Warning ─────────────────────────────────────────────────────────────────────╮
│                                                                              │
│   Ignored build scripts: esbuild.                                            │
│   Run "pnpm approve-builds" to pick which dependencies should be allowed     │
│   to run scripts.                                                            │
│                                                                              │
╰──────────────────────────────────────────────────────────────────────────────╯

Done in 7.3s using pnpm v10.12.4
src/components/content/ContentEditor.tsx:63:26 - error TS2304: Cannot find name 'client'.

63         .eq('client_id', client.id)
                            ~~~~~~

src/components/content/ContentEditor.tsx:76:26 - error TS2304: Cannot find name 'client'.

76         .eq('client_id', client.id)
                            ~~~~~~

src/components/content/ContentEditor.tsx:180:41 - error TS2304: Cannot find name 'client'.

180               style={{ backgroundColor: client.brand_color + '20' }}
                                            ~~~~~~

src/components/content/ContentEditor.tsx:331:42 - error TS2304: Cannot find name 'Client'.

331   const [clients, setClients] = useState<Client[]>([])
                                             ~~~~~~

src/components/content/ContentEditor.tsx:984:59 - error TS2304: Cannot find name 'community'.

984                                 style={{ backgroundColor: community.brand_color }}
                                                              ~~~~~~~~~

src/components/content/ContentEditor.tsx:1053:15 - error TS2322: Type '{ isOpen: true; onClose: () => void; client: Client; contentItemId: string; onSave: () => void; }' is not assignable to type 'IntrinsicAttributes & AssignmentModalProps'.
  Property 'client' does not exist on type 'IntrinsicAttributes & AssignmentModalProps'.

1053               client={clients.find(c => c.id === activeAssignmentModal)!}
                   ~~~~~~

src/components/content/ContentRepository.tsx:133:34 - error TS2304: Cannot find name 'communityAssignments'.

133           const communityCount = communityAssignments.data?.filter(a => a.content_item_id === id).length || 0
                                     ~~~~~~~~~~~~~~~~~~~~

src/components/content/ContentRepository.tsx:220:16 - error TS2345: Argument of type '(prev: RepositoryFilters) => { search: string; clients: any[]; status: "all"; sortBy: "updated_at"; sortOrder: "desc"; viewMode: "list" | "cards"; }' is not assignable to parameter of type 'SetStateAction<RepositoryFilters>'.
  Type '(prev: RepositoryFilters) => { search: string; clients: any[]; status: "all"; sortBy: "updated_at"; sortOrder: "desc"; viewMode: "list" | "cards"; }' is not assignable to type '(prevState: RepositoryFilters) => RepositoryFilters'.
    Property 'communities' is missing in type '{ search: string; clients: any[]; status: "all"; sortBy: "updated_at"; sortOrder: "desc"; viewMode: "list" | "cards"; }' but required in type 'RepositoryFilters'.

220     setFilters(prev => ({
                   ~~~~~~~~~~
221       search: '',
    ~~~~~~~~~~~~~~~~~
... 
226       viewMode: prev.viewMode // Preserve view mode
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
227     }))
    ~~~~~~

  src/components/content/ContentRepository.tsx:10:3
    10   communities: string[]
         ~~~~~~~~~~~
    'communities' is declared here.

src/components/modals/EnhancedCommunityModal.tsx:404:40 - error TS2339: Property 'key_type' does not exist on type 'ApiKey'.

404                       {key.name} ({key.key_type})
                                           ~~~~~~~~

src/pages/AnalyticsDashboard.tsx:71:7 - error TS2304: Cannot find name 'setClients'.

71       setClients(data || [])
         ~~~~~~~~~~

src/pages/AnalyticsDashboard.tsx:114:17 - error TS2339: Property 'communityId' does not exist on type 'DashboardFilters'.

114     if (filters.communityId === 'all') return 'All Communities'
                    ~~~~~~~~~~~

src/pages/AnalyticsDashboard.tsx:115:51 - error TS2339: Property 'communityId' does not exist on type 'DashboardFilters'.

115     return communities.find(c => c.id === filters.communityId)?.name || 'Unknown Community'
                                                      ~~~~~~~~~~~

src/pages/AnalyticsDashboard.tsx:173:40 - error TS2304: Cannot find name 'handleCommunityChange'.

173                         onClick={() => handleCommunityChange(community.id)}
                                           ~~~~~~~~~~~~~~~~~~~~~

src/pages/AnalyticsDashboard.tsx:175:35 - error TS2339: Property 'communityId' does not exist on type 'DashboardFilters'.

175                           filters.communityId === community.id ? 'bg-blue-50 text-blue-700' : 'text-gray-700'
                                      ~~~~~~~~~~~

src/pages/EnhancedCommunitiesPage.tsx:377:11 - error TS2322: Type '{ community: Community; apiKeys: ApiKey[]; communities: ExtendedCommunity[]; onClose: () => void; onSave: () => void; }' is not assignable to type 'IntrinsicAttributes & CommunityModalProps'.
  Property 'community' does not exist on type 'IntrinsicAttributes & CommunityModalProps'.

377           community={editingCommunity}
              ~~~~~~~~~

src/pages/Tags.tsx:10:42 - error TS2304: Cannot find name 'Client'.

10   const [clients, setClients] = useState<Client[]>([])
                                            ~~~~~~

src/pages/Tags.tsx:73:24 - error TS2304: Cannot find name 'selectedCommunity'.

73   const filteredTags = selectedCommunity
                          ~~~~~~~~~~~~~~~~~

src/pages/Tags.tsx:74:47 - error TS2304: Cannot find name 'selectedCommunity'.

74     ? tags.filter(tag => tag.community_id === selectedCommunity)
                                                 ~~~~~~~~~~~~~~~~~

src/pages/Tags.tsx:78:12 - error TS2304: Cannot find name 'communities'.

78     return communities.find(c => c.id === communityId)?.name || 'Unknown Community'
              ~~~~~~~~~~~

src/pages/Tags.tsx:86:12 - error TS2304: Cannot find name 'clientName'.

86     groups[clientName].push(tag)
              ~~~~~~~~~~

src/pages/Tags.tsx:212:16 - error TS2304: Cannot find name 'selectedCommunity'.

212               {selectedCommunity ? 'No tags found for this community' : 'No tags yet'}
                   ~~~~~~~~~~~~~~~~~

src/pages/Tags.tsx:239:9 - error TS2322: Type '{ isOpen: boolean; onClose: () => void; onSuccess: () => void; tag: UserTag; clients: Client[]; }' is not assignable to type 'IntrinsicAttributes & TagModalProps'.
  Property 'clients' does not exist on type 'IntrinsicAttributes & TagModalProps'.

239         clients={clients}
            ~~~~~~~

src/pages/Users.tsx:9:42 - error TS2304: Cannot find name 'Client'.

9   const [clients, setClients] = useState<Client[]>([])
                                           ~~~~~~

src/pages/Users.tsx:46:30 - error TS2304: Cannot find name 'selectedCommunity'.

46     const matchesCommunity = selectedCommunity === '' || user.community_id === selectedCommunity
                                ~~~~~~~~~~~~~~~~~

src/pages/Users.tsx:46:80 - error TS2304: Cannot find name 'selectedCommunity'.

46     const matchesCommunity = selectedCommunity === '' || user.community_id === selectedCommunity
                                                                                  ~~~~~~~~~~~~~~~~~

src/pages/Users.tsx:48:29 - error TS2304: Cannot find name 'matchesClient'.

48     return matchesSearch && matchesClient
                               ~~~~~~~~~~~~~

src/pages/Users.tsx:126:33 - error TS2304: Cannot find name 'getUserCommunity'.

126               const community = getUserCommunity(user.community_id)
                                    ~~~~~~~~~~~~~~~~

src/pages/Users.tsx:142:28 - error TS2552: Cannot find name 'client'. Did you mean 'clients'?

142                           {client && (
                               ~~~~~~

  src/pages/Users.tsx:9:10
    9   const [clients, setClients] = useState<Client[]>([])
               ~~~~~~~
    'clients' is declared here.

src/pages/Users.tsx:144:78 - error TS2552: Cannot find name 'client'. Did you mean 'clients'?

144                               <Building2 className="h-3 w-3" style={{ color: client.brand_color }} />
                                                                                 ~~~~~~

  src/pages/Users.tsx:9:10
    9   const [clients, setClients] = useState<Client[]>([])
               ~~~~~~~
    'clients' is declared here.

src/pages/Users.tsx:145:72 - error TS2552: Cannot find name 'client'. Did you mean 'clients'?

145                               <span className="text-xs text-gray-500">{client.name}</span>
                                                                           ~~~~~~

  src/pages/Users.tsx:9:10
    9   const [clients, setClients] = useState<Client[]>([])
               ~~~~~~~
    'clients' is declared here.


Found 30 errors.

 ELIFECYCLE  Command failed with exit code 2.
