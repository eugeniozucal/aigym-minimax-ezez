                  disabled={!systemPrompt.trim()}
                  className="inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-md text-blue-700 bg-blue-100 hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50"
                >
                  <MessageSquare className="h-3 w-3 mr-1" />
                  New Chat
                </button>
                {activeConversation && (
                  <button
                    onClick={() => deleteConversation(activeConversation.id)}
                    className="inline-flex items-center px-3 py-1.5 border border-red-200 text-xs font-medium rounded-md text-red-700 bg-red-50 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
                  >
                    <Trash2 className="h-3 w-3 mr-1" />
                    Delete
                  </button>
                )}
              </div>
            </div>
            {!systemPrompt.trim() && (
              <div className="mt-3 p-3 bg-yellow-50 rounded-lg flex items-center space-x-2">
                <AlertCircle className="h-4 w-4 text-yellow-600" />
                <p className="text-xs text-yellow-700">
                  Add a system prompt above to enable AI testing
                </p>
              </div>
            )}
          </div>
          
          <div className="flex h-96">
            {/* Conversation List */}
            <div className="w-64 border-r border-gray-200 bg-gray-50">
              <div className="p-4">
                <h4 className="text-sm font-medium text-gray-700 mb-3">Test Conversations</h4>
                <div className="space-y-2">
                  {testConversations.map((conversation, index) => (
                    <div
                      key={conversation.id}
                      onClick={() => selectConversation(conversation)}
                      className={`p-3 rounded-lg cursor-pointer transition-colors ${
                        activeConversation?.id === conversation.id
                          ? 'bg-blue-100 border-blue-200'
                          : 'bg-white border-gray-200 hover:bg-gray-100'
                      } border`}
                    >
                      <div className="flex items-center justify-between">
                        <span className="text-sm font-medium text-gray-900">
                          Chat {index + 1}
                        </span>
                        <button
                          onClick={(e) => {
                            e.stopPropagation()
                            deleteConversation(conversation.id)
                          }}
                          className="text-red-500 hover:text-red-700 p-1 rounded"
                        >
                          <Trash2 className="h-3 w-3" />
                        </button>
                      </div>
                      <p className="text-xs text-gray-500 mt-1">
                        {conversation.messages.length} messages
                      </p>
                      <p className="text-xs text-gray-500">
                        {new Date(conversation.created_at).toLocaleTimeString()}
                      </p>
                    </div>
                  ))}
                </div>
              </div>
            </div>

            {/* Chat Interface */}
            <div className="flex-1 flex flex-col">
              {activeConversation ? (
                <>
                  {/* Messages */}
                  <div className="flex-1 overflow-y-auto p-4 space-y-4" id="messages-container">
                    {activeConversation.messages.length === 0 ? (
                      <div className="text-center py-12 text-gray-500">
                        <Bot className="h-12 w-12 mx-auto mb-3 text-gray-300" />
                        <p className="text-sm">Start testing your AI agent</p>
                        <p className="text-xs mt-1">Type a message below to begin the conversation</p>
                      </div>
                    ) : (
                      activeConversation.messages.map((message, index) => (
                        <div key={`${activeConversation.id}-${index}-${message.timestamp}`} className={`flex items-start space-x-3 ${
                          message.role === 'user' ? 'flex-row-reverse space-x-reverse' : ''
                        }`}>
                          <div className={`flex-shrink-0 h-8 w-8 rounded-full flex items-center justify-center ${
                            message.role === 'user' 
                              ? 'bg-blue-500 text-white' 
                              : 'bg-gray-600 text-white'
                          }`}>
                            {message.role === 'user' ? (
                              <User className="h-4 w-4" />
                            ) : (
                              <Bot className="h-4 w-4" />
                            )}
                          </div>
                          <div className={`flex-1 ${
                            message.role === 'user' ? 'text-right' : 'text-left'
                          }`}>
                            <div className={`inline-block max-w-3xl p-3 rounded-lg text-sm ${
                              message.role === 'user'
                                ? 'bg-blue-500 text-white'
                                : 'bg-gray-100 text-gray-900'
                            }`}>
                              <div className="whitespace-pre-wrap">{message.content}</div>
                            </div>
                            <p className="text-xs text-gray-500 mt-1">
                              {new Date(message.timestamp).toLocaleTimeString()}
                            </p>
                          </div>
                        </div>
                      ))
                    )}
                    {isTestingAgent && (
                      <div className="flex items-start space-x-3">
                        <div className="flex-shrink-0 h-8 w-8 rounded-full bg-gray-600 flex items-center justify-center">
                          <Bot className="h-4 w-4 text-white" />
                        </div>
                        <div className="flex-1">
                          <div className="inline-block p-3 rounded-lg bg-gray-100">
                            <div className="flex items-center space-x-2">
                              <LoadingSpinner size="sm" />
                              <span className="text-sm text-gray-600">Thinking...</span>
                            </div>
                          </div>
                        </div>
                      </div>
                    )}
                    {/* Scroll anchor */}
                    <div ref={messagesEndRef} />
                  </div>

                  {/* Input Area */}
                  <div className="border-t border-gray-200 p-4">
                    {testError && (
                      <div className="mb-3 p-3 bg-red-50 border border-red-200 rounded-lg">
                        <div className="flex items-center space-x-2">
                          <AlertCircle className="h-4 w-4 text-red-600" />
                          <p className="text-sm text-red-700">{testError}</p>
                        </div>
                      </div>
                    )}
                    <div className="flex space-x-3">
                      <div className="flex-1">
                        <textarea
                          value={testInput}
                          onChange={(e) => setTestInput(e.target.value)}
                          onKeyPress={handleKeyPress}
                          placeholder="Type your test message..."
                          rows={2}
                          disabled={!systemPrompt.trim() || isTestingAgent}
                          className="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none disabled:opacity-50"
                        />
                      </div>
                      <button
                        onClick={sendTestMessage}
                        disabled={!testInput.trim() || !systemPrompt.trim() || isTestingAgent}
                        className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 transition-colors"
                      >
                        {isTestingAgent ? (
                          <LoadingSpinner size="sm" />
                        ) : (
                          <Send className="h-4 w-4" />
                        )}
                      </button>
                    </div>
                    <p className="text-xs text-gray-500 mt-2">
                      Press Enter to send, Shift+Enter for new line
                    </p>
                  </div>
                </>
              ) : (
                <div className="flex-1 flex items-center justify-center p-8">
                  <div className="text-center">
                    <MessageSquare className="h-16 w-16 text-gray-300 mx-auto mb-4" />
                    <h3 className="text-lg font-medium text-gray-900 mb-2">No Conversation Selected</h3>
                    <p className="text-sm text-gray-500 mb-4">
                      Create a new conversation to start testing your AI agent
                    </p>
                    <button
                      onClick={startNewConversation}
                      disabled={!systemPrompt.trim()}
                      className="inline-flex items-center px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50"
                    >
                      <Plus className="h-4 w-4 mr-2" />
                      Start New Conversation
                    </button>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </ContentEditor>
  )
}

export default AIAgentEditor