{"extracted_information": "Comprehensive details on End-to-End (E2E) testing methodologies, including definitions, design blocks, application phases, key metrics, and recommended frameworks/tools. The content implicitly links these practices to enterprise-level engineering by referencing Azure DevOps (AzDO) for CI/CD integration, defect tracking, and pipeline automation, suggesting alignment with Microsoft's ecosystem for engineering best practices.", "specifications": {"e2e_testing_definition": "End-to-end (E2E) testing is a Software testing methodology to test a functional and data application flow consisting of several sub-systems working together from start to end. It verifies the application from start to end, putting all its components together, especially when sub-systems are developed in different technologies by different teams or organizations.", "e2e_testing_purpose": "In modern commercial software systems with multiple interconnected sub-systems, E2E testing is critical because a failure or fault in any sub-system can adversely affect the entire software system, leading to its collapse. It ensures functional integrity across the complete application.", "testing_pyramid_context": "The E2E testing pyramid, a combination from Kent C. Dodd, Martin Fowler, and Google Testing Blog, illustrates that the majority of tests are at the bottom (e.g., unit tests). As one moves up the pyramid to E2E tests, the number of tests decreases, and they become slower and more expensive to write, run, and maintain. Each testing type varies in purpose, application, and coverage areas."}, "pricing": {}, "features": [{"category": "E2E Testing Design Blocks", "details": [{"name": "User Functions", "description": "List user-initiated functions of software systems and their interconnected sub-systems. Keep track of actions performed, input and output data. Identify relations between different user functions and their nature (independent or reusable)."}, {"name": "Conditions", "description": "Prepare a set of conditions for each user function. Parameters can include timing, data conditions, and other factors affecting user functions."}, {"name": "Test Cases", "description": "Create one or more test cases for every scenario to test each functionality. These should ideally be automated through standard CI/CD build pipeline processes, with success/failure tracked in AzDO. Every single condition should be enlisted as a separate test case."}]}, {"category": "Applying E2E Testing Phases", "details": [{"name": "Planning", "steps": ["Business and Functional Requirement analysis", "Test plan development", "Test case development", "Production-like Environment setup for the testing", "Test data setup", "Decide exit criteria", "Choose the most applicable testing methods."]}, {"name": "Pre-requisite", "steps": ["System Testing should be complete for all participating systems", "All subsystems should be combined to work as a complete application", "Production-like test environment should be ready."]}, {"name": "Test Execution", "steps": ["Execute the test cases", "Register the test results and decide on pass and failure", "Report the Bugs in the bug reporting tool", "Re-verify the bug fixes."]}, {"name": "Test Closure", "steps": ["Test report preparation", "Evaluation of exit criteria", "Test phase closure."]}]}, {"category": "E2E Test Metrics", "details": [{"name": "Test case preparation status", "description": "Number of test cases ready versus the total number of test cases."}, {"name": "Frequent Test progress", "description": "Number of test cases executed in a consistent frequent manner (e.g., weekly) versus a target number in the same period."}, {"name": "Defects Status", "description": "Percentage of open and closed defects as per their severity and priority, logged in defect tracking tools (e.g., AzDO backlog). AzDO Dashboard Query can track this metric."}, {"name": "Test environment availability", "description": "Duration of the test environment used for end-to-end testing versus its scheduled allocation duration."}]}, {"category": "E2E Testing Frameworks and Tools", "details": [{"name": "Gauge Framework", "description": "Free, open-source framework with Markdown-based syntax. Offers consistent cross-platform/language support, modular architecture with plugins, data-driven execution, and external data sources. Supports VS Code, IntelliJ IDEA, and generates HTML, JSON, XML reports.", "website": "https://gauge.org/"}, {"name": "Robot Framework", "description": "Generic open-source automation framework with easy, human-readable keywords. Extensible via Python or Java libraries. Compared to Gauge, it has less stable VS Code Intellisense and less readable syntax, and lacks baked-in Intellisense for markup files.", "website": "https://robotframework.org/#introduction"}, {"name": "TestCraft", "description": "Codeless Selenium test automation platform using AI technology and visual modeling for faster test creation and execution, reducing maintenance overhead. Enables fully automated test scenarios without coding and integrates with CI/CD.", "website": "https://www.perfecto.io/", "marketplace": "https://marketplace.visualstudio.com/items?itemName=testcraft.build-release-task"}, {"name": "Ranorex Studio", "description": "Complete E2E test automation tool for desktop, web, and mobile applications. Supports creation of reliable tests with or without coding. Allows input from CSV, Excel, or SQL databases. Features parallel test execution, Selenium Grid integration, CI/CD integration, and Azure DevOps (AzDO) integration for build pipelines.", "website": "https://www.ranorex.com/free-trial"}, {"name": "Katalon Studio", "description": "E2E automation solution for web, API, mobile, and desktop testing with DevOps support. Integrates into CI/CD pipelines. Offers features like Spying, Recording, Dual-editor interface, and Custom Keywords. Built on Selenium and Appium, it standardizes E2E tests and complies with popular frameworks. Endorsed by Gartner. Azure DevOps (AzDO) extension was not available for Linux at the time of writing.", "website": "https://www.katalon.com/", "azdo_integration_info": "https://docs.katalon.com/katalon-studio/docs/azure-devops-extension.html#installation"}, {"name": "BugBug.io", "description": "Easy way to automate web application tests, focusing on simplicity without coding. All-in-one solution with built-in cloud for scheduled or CI/CD runs. Based on a Chrome extension for faster recording and execution, offering an alternative to Selenium. User-friendly for non-technical maintenance.", "website": "https://bugbug.io?utm_source=microsoft_github&utm_medium=referral"}]}], "statistics": {}, "temporal_info": {"last_update": "August 26, 2024"}, "geographical_data": {}, "references": [{"title": "Wikipedia: Software testing", "url": "https://en.wikipedia.org/wiki/Software_testing"}, {"title": "Wikipedia: Unit testing", "url": "https://en.wikipedia.org/wiki/Unit_testing"}, {"title": "Wikipedia: Integration testing", "url": "https://en.wikipedia.org/wiki/Integration_testing"}, {"title": "Wikipedia: System testing", "url": "https://en.wikipedia.org/wiki/System_testing"}, {"title": "Kent C. Dodd's blog - Write tests, not too many, mostly integration", "url": "https://blog.kentcdodds.com/write-tests-not-too-many-mostly-integration-5e8c7fff591c"}, {"title": "Martin Fowlerâ€™s blog - TestPyramid", "url": "https://martinfowler.com/bliki/TestPyramid.html"}, {"title": "Google Testing Blog - Just Say No to More End-to-End Tests", "url": "https://testing.googleblog.com/2015/04/just-say-no-to-more-end-to-end-tests.html"}, {"title": "Gauge Framework Website", "url": "https://gauge.org/"}, {"title": "Robot Framework Website", "url": "https://robotframework.org/#introduction"}, {"title": "Perfecto (TestCraft) Website", "url": "https://www.perfecto.io/"}, {"title": "TestCraft Visual Studio Marketplace", "url": "https://marketplace.visualstudio.com/items?itemName=testcraft.build-release-task"}, {"title": "Ranorex Studio Website", "url": "https://www.ranorex.com/free-trial"}, {"title": "Katalon Studio Website", "url": "https://www.katalon.com/"}, {"title": "Katalon Studio integration with AzDO", "url": "https://docs.katalon.com/katalon-studio/docs/azure-devops-extension.html#installation"}, {"title": "BugBug Website", "url": "https://bugbug.io?utm_source=microsoft_github&utm_medium=referral"}]}