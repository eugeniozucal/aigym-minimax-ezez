{"extracted_information": "Supabase Reports provide comprehensive observability for projects through monitoring dashboards visualizing key metrics across database, auth, storage, realtime, and API systems. Each report offers self-debugging tools for optimizing performance and troubleshooting.", "specifications": {}, "pricing": {"time_range_availability_by_plan": {"Last 10 minutes": ["Free", "Pro", "Team", "Enterprise"], "Last 30 minutes": ["Free", "Pro", "Team", "Enterprise"], "Last 60 minutes": ["Free", "Pro", "Team", "Enterprise"], "Last 3 hours": ["Free", "Pro", "Team", "Enterprise"], "Last 24 hours": ["Free", "Pro", "Team", "Enterprise"], "Last 7 days": ["Pro", "Team", "Enterprise"], "Last 14 days": ["Team", "Enterprise"], "Last 28 days": ["Team", "Enterprise"]}}, "features": [{"name": "Database Report", "description": "Provides comprehensive view into Postgres instance's health and performance characteristics, identifying bottlenecks, resource constraints, and optimization opportunities.", "charts": [{"name": "Memory usage", "available_plans": ["Free", "Pro"], "description": "RAM usage percentage by the database", "key_insights": "Memory pressure and resource utilization"}, {"name": "CPU usage", "available_plans": ["Free", "Pro"], "description": "Average CPU usage percentage", "key_insights": "CPU-intensive query identification"}, {"name": "Disk IOPS", "available_plans": ["Free", "Pro"], "description": "Read/write operations per second with limits", "key_insights": "IO bottleneck detection and workload analysis"}, {"name": "Database connections", "available_plans": ["Free", "Pro"], "description": "Number of pooler connections to the database", "key_insights": "Connection pool monitoring"}, {"name": "Shared Pooler connections", "available_plans": ["All"], "description": "Client connections to the shared pooler", "key_insights": "Shared pooler usage patterns"}, {"name": "Dedicated Pooler connections", "available_plans": ["All"], "description": "Client connections to PgBouncer", "key_insights": "Dedicated pooler connection monitoring"}], "advanced_telemetry_charts": [{"name": "Memory usage", "available_plans": ["Teams", "Enterprise"], "description": "Detailed breakdown of RAM usage (Used, Cache + buffers, Free).", "debug_issues": [{"issue": "Memory pressure detection", "description": "Identify when free memory is consistently low"}, {"issue": "Cache effectiveness monitoring", "description": "Monitor cache performance for query optimization"}, {"issue": "Memory leak detection", "description": "Detect inefficient memory usage patterns"}], "actions_to_take": [{"action": "Upgrade compute size", "description": "Increase available memory resources"}, {"action": "Optimize queries", "description": "Reduce memory consumption of expensive queries"}, {"action": "Tune Postgres configuration", "description": "Improve memory management settings"}, {"action": "Implement application caching", "description": "Add query result caching to reduce memory load"}]}, {"name": "CPU usage", "available_plans": ["Teams", "Enterprise"], "description": "Breakdown of CPU time (System, User, IOWait, IRQs, Other).", "debug_issues": [{"issue": "CPU-intensive query identification", "description": "Identify expensive queries when User CPU is high"}, {"issue": "IO bottleneck detection", "description": "Detect disk/network issues when IOWait is elevated"}, {"issue": "System overhead monitoring", "description": "Monitor resource contention and kernel overhead"}], "actions_to_take": [{"action": "Optimize CPU-intensive queries", "description": "Target queries causing high User CPU usage"}, {"action": "Address IO bottlenecks", "description": "Resolve disk/network issues when IOWait is high"}, {"action": "Upgrade compute size", "description": "Increase available CPU capacity"}, {"action": "Implement proper indexing", "description": "Use query optimization techniques"}]}, {"name": "Disk input/output operations per second (IOPS)", "available_plans": ["Teams", "Enterprise"], "description": "Displays read and write IOPS with reference to compute size's maximum IOPS capacity.", "debug_issues": [{"issue": "Disk IO bottleneck identification", "description": "Identify when disk IO becomes a performance constraint"}, {"issue": "Workload pattern analysis", "description": "Distinguish between read-heavy vs write-heavy operations"}, {"issue": "Performance correlation", "description": "Spot disk activity spikes that correlate with performance issues"}], "actions_to_take": [{"action": "Optimize indexing", "description": "Reduce high read IOPS through better query indexing"}, {"action": "Consider read replicas", "description": "Distribute read-heavy workloads across multiple instances"}, {"action": "Batch write operations", "description": "Reduce write IOPS by grouping database writes"}, {"action": "Upgrade compute size", "description": "Increase IOPS limits with larger compute instances"}]}, {"name": "Disk IO Usage", "available_plans": ["Teams", "Enterprise"], "description": "Displays the percentage of allocated IOPS currently being used.", "debug_issues": [{"issue": "IOPS limit monitoring", "description": "Identify when approaching your allocated IOPS capacity"}, {"issue": "Performance correlation", "description": "Correlate high IO usage with application performance issues"}, {"issue": "Operation impact assessment", "description": "Monitor how database operations affect disk performance"}], "actions_to_take": [{"action": "Optimize disk-intensive queries", "description": "Reduce queries that perform excessive reads/writes"}, {"action": "Add strategic indexes", "description": "Reduce sequential scans with appropriate indexing"}, {"action": "Upgrade compute size", "description": "Increase IOPS limits with larger compute instances"}, {"action": "Review database design", "description": "Optimize schema and query patterns for efficiency"}]}, {"name": "Disk size", "available_plans": ["Teams", "Enterprise"], "description": "Breakdown of disk space usage (Database, WAL, System).", "debug_issues": [{"issue": "Space consumption monitoring", "description": "Track disk usage trends over time"}, {"issue": "Growth pattern identification", "description": "Identify rapid growth requiring attention"}, {"issue": "Capacity planning", "description": "Plan upgrades before hitting storage limits"}], "actions_to_take": [{"action": "Run VACUUM operations", "description": "Reclaim dead tuple space and optimize storage"}, {"action": "Analyze large tables", "description": "Use CLI commands like `table-sizes` to identify optimization targets"}, {"action": "Implement data archival", "description": "Archive historical data to reduce active storage needs"}, {"action": "Upgrade disk size", "description": "Increase storage capacity when approaching limits"}]}, {"name": "Database connections", "available_plans": ["Teams", "Enterprise"], "description": "Breakdown of connection types (Postgres, PostgREST, Reserved, Auth, Storage, Other roles).", "debug_issues": [{"issue": "Connection pool exhaustion", "description": "Identify when approaching maximum connection limits"}, {"issue": "Connection leak detection", "description": "Spot applications not properly closing connections"}, {"issue": "Service distribution monitoring", "description": "Monitor connection usage across different Supabase services"}], "actions_to_take": [{"action": "Upgrade compute size", "description": "Increase maximum connection limits"}, {"action": "Implement connection pooling", "description": "Optimize connection management for high direct connection usage"}, {"action": "Review application code", "description": "Ensure proper connection handling and cleanup"}]}]}, {"name": "Auth Report", "description": "Focuses on user authentication patterns and behaviors.", "charts": [{"name": "Active Users", "description": "Count of unique users performing auth actions", "key_insights": "User engagement and retention patterns"}, {"name": "Sign In Attempts by Type", "description": "Breakdown of authentication methods used", "key_insights": "Password vs OAuth vs magic link preferences"}, {"name": "Sign Ups", "description": "Total new user registrations", "key_insights": "Growth trends and onboarding funnel performance"}, {"name": "Auth Errors", "description": "Error rates grouped by status code", "key_insights": "Authentication friction and security issues"}, {"name": "Password Reset Requests", "description": "Volume of password recovery attempts", "key_insights": "User experience pain points"}]}, {"name": "Storage Report", "description": "Provides visibility into Storage utilization, request patterns, performance, and caching effectiveness.", "charts": [{"name": "Total Requests", "description": "Overall request volume to Storage", "key_insights": "Traffic patterns and usage trends"}, {"name": "Response Speed", "description": "Average response time for storage requests", "key_insights": "Performance bottlenecks and optimization opportunities"}, {"name": "Network Traffic", "description": "Ingress and egress usage", "key_insights": "Data transfer costs and CDN effectiveness"}, {"name": "Request Caching", "description": "Cache hit rates and miss patterns", "key_insights": "CDN performance and cost optimization"}, {"name": "Top Routes", "description": "Most frequently accessed storage paths", "key_insights": "Popular content and usage patterns"}]}, {"name": "Realtime Report", "description": "Tracks WebSocket connections, channel activity, and real-time event patterns.", "charts": [{"name": "Realtime Connections", "description": "Active WebSocket connections over time", "key_insights": "Concurrent user activity and connection stability"}, {"name": "Channel Events", "description": "Breakdown of broadcast, Postgres changes, and presence events", "key_insights": "Real-time feature usage patterns"}, {"name": "Rate of Channel Joins", "description": "Frequency of new channel subscriptions", "key_insights": "User engagement with real-time features"}, {"name": "Total Requests", "description": "HTTP requests to Realtime endpoints", "key_insights": "API usage alongside WebSocket activity"}, {"name": "Response Speed", "description": "Performance of Realtime API endpoints", "key_insights": "Infrastructure optimization opportunities"}]}, {"name": "Edge Functions Report", "description": "Provides insights into serverless function performance, execution patterns, and regional distribution.", "charts": [{"name": "Execution Status Codes", "description": "Function response codes and error rates", "key_insights": "Function reliability and error patterns"}, {"name": "Execution Time", "description": "Average function duration and performance", "key_insights": "Performance optimization opportunities"}, {"name": "Invocations by Region", "description": "Geographic distribution of function calls", "key_insights": "Global usage patterns and latency optimization"}]}, {"name": "API Gateway Report", "description": "Analyzes traffic patterns and performance characteristics of requests flowing through API layer.", "charts": [{"name": "Total Requests", "description": "Overall API request volume", "key_insights": "Traffic patterns and growth trends"}, {"name": "Response Errors", "description": "Error rates with 4XX and 5XX status codes", "key_insights": "API reliability and user experience issues"}, {"name": "Response Speed", "description": "Average API response times", "key_insights": "Performance bottlenecks and optimization targets"}, {"name": "Network Traffic", "description": "Request and response egress usage", "key_insights": "Data transfer patterns and cost implications"}, {"name": "Top Routes", "description": "Most frequently accessed API endpoints", "key_insights": "Usage patterns and optimization priorities"}]}], "statistics": {}, "temporal_info": {}, "geographical_data": {}, "references": []}