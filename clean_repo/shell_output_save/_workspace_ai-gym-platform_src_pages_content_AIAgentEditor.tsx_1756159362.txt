                              : 'bg-gray-600 text-white'
                          }`}>
                            {message.role === 'user' ? (
                              <User className="h-4 w-4" />
                            ) : (
                              <Bot className="h-4 w-4" />
                            )}
                          </div>
                          <div className={`flex-1 ${
                            message.role === 'user' ? 'text-right' : 'text-left'
                          }`}>
                            <div className={`inline-block max-w-3xl p-3 rounded-lg text-sm ${
                              message.role === 'user'
                                ? 'bg-blue-500 text-white'
                                : 'bg-gray-100 text-gray-900'
                            }`}>
                              <div className="whitespace-pre-wrap">{message.content}</div>
                            </div>
                            <p className="text-xs text-gray-500 mt-1">
                              {new Date(message.timestamp).toLocaleTimeString()}
                            </p>
                          </div>
                        </div>
                      ))
                    )}
                    {isTestingAgent && (
                      <div className="flex items-start space-x-3">
                        <div className="flex-shrink-0 h-8 w-8 rounded-full bg-gray-600 flex items-center justify-center">
                          <Bot className="h-4 w-4 text-white" />
                        </div>
                        <div className="flex-1">
                          <div className="inline-block p-3 rounded-lg bg-gray-100">
                            <div className="flex items-center space-x-2">
                              <LoadingSpinner size="sm" />
                              <span className="text-sm text-gray-600">Thinking...</span>
                            </div>
                          </div>
                        </div>
                      </div>
                    )}
                    {/* Scroll anchor */}
                    <div ref={messagesEndRef} />
                  </div>

                  {/* Input Area */}
                  <div className="border-t border-gray-200 p-4">
                    {testError && (
                      <div className="mb-3 p-3 bg-red-50 border border-red-200 rounded-lg">
                        <div className="flex items-center space-x-2">
                          <AlertCircle className="h-4 w-4 text-red-600" />
                          <p className="text-sm text-red-700">{testError}</p>
                        </div>
                      </div>
                    )}
                    <div className="flex space-x-3">
                      <div className="flex-1">
                        <textarea
                          value={testInput}
                          onChange={(e) => setTestInput(e.target.value)}
                          onKeyPress={handleKeyPress}
                          placeholder="Type your test message..."
                          rows={2}
                          disabled={!systemPrompt.trim() || isTestingAgent}
                          className="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none disabled:opacity-50"
                        />
                      </div>
                      <button
                        onClick={sendTestMessage}
                        disabled={!testInput.trim() || !systemPrompt.trim() || isTestingAgent}
                        className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 transition-colors"
                      >
                        {isTestingAgent ? (
                          <LoadingSpinner size="sm" />
                        ) : (
                          <Send className="h-4 w-4" />
                        )}
                      </button>
                    </div>
                    <p className="text-xs text-gray-500 mt-2">
                      Press Enter to send, Shift+Enter for new line
                    </p>
